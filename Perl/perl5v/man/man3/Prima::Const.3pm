.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Prima::Const 3"
.TH Prima::Const 3 "2015-11-04" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Prima::Const \- predefined constants
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Prima::Const\*(C'\fR and Prima::Classes is a minimal set of perl modules needed for
the toolkit. Since the module provides bindings for the core constants, it is required
to be included in every Prima-related module and program.
.PP
The constants are assembled under the top-level package names, with no \f(CW\*(C`Prima::\*(C'\fR
prefix. This violates the perl guidelines about package naming, however, it was 
considered way too inconvenient to prefix every constant with \f(CW\*(C`Prima::\*(C'\fR string.
.PP
This document provides description of all core-coded constants. The constants
are also described in the articles together with the corresponding methods and
properties. For example, \f(CW\*(C`nt\*(C'\fR constants are also described in \*(L"Flow\*(R" in Prima::Object
article.
.SH "API"
.IX Header "API"
.SS "am::  \- Prima::Icon auto masking"
.IX Subsection "am:: - Prima::Icon auto masking"
See also \*(L"autoMasking\*(R" in Prima::Image
.PP
.Vb 4
\&        am::None           \- no mask update performed
\&        am::MaskColor      \- mask update based on Prima::Icon::maskColor property
\&        am::MaskIndex      \- mask update based on Prima::Icon::maskIndex property
\&        am::Auto           \- mask update based on corner pixel values
.Ve
.SS "apc:: \- \s-1OS\s0 type"
.IX Subsection "apc:: - OS type"
See \*(L"get_system_info\*(R" in Prima::Application
.PP
.Vb 2
\&        apc::Win32  
\&        apc::Unix
.Ve
.SS "bi::  \- border icons"
.IX Subsection "bi:: - border icons"
See \*(L"borderIcons\*(R" in Prima::Window
.PP
.Vb 6
\&        bi::SystemMenu  \- system menu button and/or close button 
\&                          ( usually with icon ) is shown
\&        bi::Minimize    \- minimize button 
\&        bi::Maximize    \- maximize ( and eventual restore )
\&        bi::TitleBar    \- window title 
\&        bi::All         \- all of the above
.Ve
.SS "bs::  \- border styles"
.IX Subsection "bs:: - border styles"
See \*(L"borderStyle\*(R" in Prima::Window
.PP
.Vb 4
\&        bs::None      \- no border
\&        bs::Single    \- thin border
\&        bs::Dialog    \- thick border
\&        bs::Sizeable  \- thick border with interactive resize capabilities
.Ve
.SS "ci::  \- color indices"
.IX Subsection "ci:: - color indices"
See \*(L"colorIndex\*(R" in Prima::Widget
.PP
.Vb 9
\&        ci::NormalText or ci::Fore 
\&        ci::Normal or ci::Back
\&        ci::HiliteText
\&        ci::Hilite
\&        ci::DisabledText
\&        ci::Disabled
\&        ci::Light3DColor
\&        ci::Dark3DColor
\&        ci::MaxId
.Ve
.SS "cl:: \- colors"
.IX Subsection "cl:: - colors"
See \*(L"colorIndex\*(R" in Prima::Widget
.IP "Direct color constants" 4
.IX Item "Direct color constants"
.Vb 10
\&        cl::Black
\&        cl::Blue
\&        cl::Green
\&        cl::Cyan
\&        cl::Red
\&        cl::Magenta
\&        cl::Brown
\&        cl::LightGray
\&        cl::DarkGray
\&        cl::LightBlue
\&        cl::LightGreen
\&        cl::LightCyan
\&        cl::LightRed
\&        cl::LightMagenta
\&        cl::Yellow
\&        cl::White
\&        cl::Gray
.Ve
.IP "Indirect color constants" 4
.IX Item "Indirect color constants"
.Vb 9
\&        cl::NormalText, cl::Fore 
\&        cl::Normal, cl::Back
\&        cl::HiliteText
\&        cl::Hilite
\&        cl::DisabledText
\&        cl::Disabled
\&        cl::Light3DColor
\&        cl::Dark3DColor
\&        cl::MaxSysColor
.Ve
.IP "Special constants" 4
.IX Item "Special constants"
See \*(L"Colors\*(R" in Prima::gp_problems
.Sp
.Vb 5
\&        cl::Set      \- logical all\-1 color
\&        cl::Clear    \- logical all\-0 color
\&        cl::Invalid  \- invalid color value
\&        cl::SysFlag  \- indirect color constant bit set
\&        cl::SysMask  \- indirect color constant bit clear mask
.Ve
.SS "cm::  \- commands"
.IX Subsection "cm:: - commands"
.IP "Keyboard and mouse commands" 4
.IX Item "Keyboard and mouse commands"
See \*(L"key_down\*(R" in Prima::Widget, \*(L"mouse_down\*(R" in Prima::Widget
.Sp
.Vb 9
\&        cm::KeyDown
\&        cm::KeyUp
\&        cm::MouseDown
\&        cm::MouseUp
\&        cm::MouseClick
\&        cm::MouseWheel
\&        cm::MouseMove
\&        cm::MouseEnter
\&        cm::MouseLeave
.Ve
.IP "Internal commands ( used in core only or not used at all )" 4
.IX Item "Internal commands ( used in core only or not used at all )"
.Vb 10
\&        cm::Close
\&        cm::Create
\&        cm::Destroy
\&        cm::Hide
\&        cm::Show
\&        cm::ReceiveFocus
\&        cm::ReleaseFocus
\&        cm::Paint
\&        cm::Repaint
\&        cm::Size
\&        cm::Move
\&        cm::ColorChanged
\&        cm::ZOrderChanged
\&        cm::Enable
\&        cm::Disable
\&        cm::Activate
\&        cm::Deactivate
\&        cm::FontChanged
\&        cm::WindowState
\&        cm::Timer
\&        cm::Click
\&        cm::CalcBounds
\&        cm::Post
\&        cm::Popup
\&        cm::Execute
\&        cm::Setup
\&        cm::Hint
\&        cm::DragDrop
\&        cm::DragOver
\&        cm::EndDrag
\&        cm::Menu
\&        cm::EndModal
\&        cm::MenuCmd
\&        cm::TranslateAccel
\&        cm::DelegateKey
.Ve
.SS "cr::  \- pointer cursor resources"
.IX Subsection "cr:: - pointer cursor resources"
See \*(L"pointerType\*(R" in Prima::Widget
.PP
.Vb 10
\&        cr::Default                 same pointer type as owner\*(Aqs
\&        cr::Arrow                   arrow pointer
\&        cr::Text                    text entry cursor\-like pointer
\&        cr::Wait                    hourglass
\&        cr::Size                    general size action pointer
\&        cr::Move                    general move action pointer 
\&        cr::SizeWest, cr::SizeW     right\-move action pointer
\&        cr::SizeEast, cr::SizeE     left\-move action pointer 
\&        cr::SizeWE                  general horizontal\-move action pointer 
\&        cr::SizeNorth, cr::SizeN    up\-move action pointer 
\&        cr::SizeSouth, cr::SizeS    down\-move action pointer 
\&        cr::SizeNS                  general vertical\-move action pointer 
\&        cr::SizeNW                  up\-right move action pointer
\&        cr::SizeSE                  down\-left move action pointer
\&        cr::SizeNE                  up\-left move action pointer
\&        cr::SizeSW                  down\-right move action pointer
\&        cr::Invalid                 invalid action pointer
\&        cr::User                    user\-defined icon
.Ve
.SS "dt::  \- drive types"
.IX Subsection "dt:: - drive types"
See \*(L"query_drive_type\*(R" in Prima::Utils
.PP
.Vb 7
\&        dt::None
\&        dt::Unknown
\&        dt::Floppy
\&        dt::HDD
\&        dt::Network
\&        dt::CDROM
\&        dt::Memory
.Ve
.SS "dt::  \- Prima::Drawable::draw_text constants"
.IX Subsection "dt:: - Prima::Drawable::draw_text constants"
.Vb 10
\&        dt::Left              \- text is aligned to the left boundary
\&        dt::Right             \- text is aligned to the right boundary
\&        dt::Center            \- text is aligned horizontally in center
\&        dt::Top               \- text is aligned to the upper boundary
\&        dt::Bottom            \- text is aligned to the lower boundary 
\&        dt::VCenter           \- text is aligned vertically in center
\&        dt::DrawMnemonic      \- tilde\-escapement and underlining is used 
\&        dt::DrawSingleChar    \- sets tw::BreakSingle option to 
\&                                Prima::Drawable::text_wrap call
\&        dt::NewLineBreak      \- sets tw::NewLineBreak option to 
\&                                Prima::Drawable::text_wrap call 
\&        dt::SpaceBreak        \- sets tw::SpaceBreak option to 
\&                                Prima::Drawable::text_wrap call  
\&        dt::WordBreak         \- sets tw::WordBreak option to 
\&                                Prima::Drawable::text_wrap call 
\&        dt::ExpandTabs        \- performs tab character ( \et ) expansion
\&        dt::DrawPartial       \- draws the last line, if it is visible partially 
\&        dt::UseExternalLeading\- text lines positioned vertically with respect to 
\&                                the font external leading
\&        dt::UseClip           \- assign ::clipRect property to the boundary rectangle
\&        dt::QueryLinesDrawn   \- calculates and returns number of lines drawn 
\&                                ( contrary to dt::QueryHeight )
\&        dt::QueryHeight       \- if set, calculates and returns vertical extension 
\&                                of the lines drawn
\&        dt::NoWordWrap        \- performs no word wrapping by the width of the boundaries
\&        dt::WordWrap          \- performs word wrapping by the width of the boundaries 
\&        dt::BidiText          \- use bidirectional formatting, if available
\&        dt::Default           \- dt::NewLineBreak|dt::WordBreak|dt::ExpandTabs|
\&                                dt::UseExternalLeading
.Ve
.SS "fdo:: \- find / replace dialog options"
.IX Subsection "fdo:: - find / replace dialog options"
See Prima::EditDialog
.PP
.Vb 5
\&        fdo::MatchCase
\&        fdo::WordsOnly
\&        fdo::RegularExpression
\&        fdo::BackwardSearch
\&        fdo::ReplacePrompt
.Ve
.SS "fds:: \- find / replace dialog scope type"
.IX Subsection "fds:: - find / replace dialog scope type"
See Prima::EditDialog
.PP
.Vb 3
\&        fds::Cursor
\&        fds::Top
\&        fds::Bottom
.Ve
.SS "fe::  \- file events constants"
.IX Subsection "fe:: - file events constants"
See Prima::File
.PP
.Vb 3
\&        fe::Read
\&        fe::Write
\&        fe::Exception
.Ve
.SS "fp::  \- standard fill pattern indices"
.IX Subsection "fp:: - standard fill pattern indices"
See \*(L"fillPattern\*(R" in Prima::Drawable
.PP
.Vb 10
\&        fp::Empty
\&        fp::Solid
\&        fp::Line
\&        fp::LtSlash
\&        fp::Slash
\&        fp::BkSlash
\&        fp::LtBkSlash
\&        fp::Hatch
\&        fp::XHatch
\&        fp::Interleave
\&        fp::WideDot
\&        fp::CloseDot
\&        fp::SimpleDots
\&        fp::Borland
\&        fp::Parquet
.Ve
.SS "fp::  \- font pitches"
.IX Subsection "fp:: - font pitches"
See \*(L"pitch\*(R" in Prima::Drawable
.PP
.Vb 3
\&        fp::Default
\&        fp::Fixed
\&        fp::Variable
.Ve
.SS "fr::  \- fetch resource constants"
.IX Subsection "fr:: - fetch resource constants"
See \*(L"fetch_resource\*(R" in Prima::Widget
.PP
.Vb 3
\&        fr::Color 
\&        fr::Font  
\&        fs::String
.Ve
.SS "fs::  \- font styles"
.IX Subsection "fs:: - font styles"
See \*(L"style\*(R" in Prima::Drawable
.PP
.Vb 7
\&        fs::Normal 
\&        fs::Bold
\&        fs::Thin
\&        fs::Italic
\&        fs::Underlined
\&        fs::StruckOut
\&        fs::Outline
.Ve
.SS "fw::  \- font weights"
.IX Subsection "fw:: - font weights"
See \*(L"weight\*(R" in Prima::Drawable
.PP
.Vb 9
\&        fw::UltraLight
\&        fw::ExtraLight
\&        fw::Light
\&        fw::SemiLight
\&        fw::Medium
\&        fw::SemiBold
\&        fw::Bold
\&        fw::ExtraBold
\&        fw::UltraBold
.Ve
.SS "gm::  \- grow modes"
.IX Subsection "gm:: - grow modes"
See \*(L"growMode\*(R" in Prima::Widget
.IP "Basic constants" 4
.IX Item "Basic constants"
.Vb 10
\&        gm::GrowLoX     widget\*(Aqs left side is kept in constant 
\&                        distance from owner\*(Aqs right side
\&        gm::GrowLoY     widget\*(Aqs bottom side is kept in constant 
\&                        distance from owner\*(Aqs top side 
\&        gm::GrowHiX     widget\*(Aqs right side is kept in constant 
\&                        distance from owner\*(Aqs right side  
\&        gm::GrowHiY     widget\*(Aqs top side is kept in constant 
\&                        distance from owner\*(Aqs top side  
\&        gm::XCenter     widget is kept in center on its owner\*(Aqs
\&                        horizontal axis
\&        gm::YCenter     widget is kept in center on its owner\*(Aqs
\&                        vertical axis 
\&        gm::DontCare    widgets origin is maintained constant relative 
\&                        to the screen
.Ve
.IP "Derived or aliased constants" 4
.IX Item "Derived or aliased constants"
.Vb 6
\&        gm::GrowAll      gm::GrowLoX|gm::GrowLoY|gm::GrowHiX|gm::GrowHiY 
\&        gm::Center       gm::XCenter|gm::YCenter
\&        gm::Client       gm::GrowHiX|gm::GrowHiY
\&        gm::Right        gm::GrowLoX|gm::GrowHiY 
\&        gm::Left         gm::GrowHiY 
\&        gm::Floor        gm::GrowHiX
.Ve
.SS "gui:: \- \s-1GUI\s0 types"
.IX Subsection "gui:: - GUI types"
See \*(L"get_system_info\*(R" in Prima::Application
.PP
.Vb 5
\&        gui::Default
\&        gui::PM  
\&        gui::Windows
\&        gui::XLib 
\&        gui::GTK2
.Ve
.SS "le::  \- line end styles"
.IX Subsection "le:: - line end styles"
See \*(L"lineEnd\*(R" in Prima::Drawable
.PP
.Vb 3
\&        le::Flat
\&        le::Square
\&        le::Round
.Ve
.SS "lj::  \- line join styles"
.IX Subsection "lj:: - line join styles"
See \*(L"lineJoin\*(R" in Prima::Drawable
.PP
.Vb 3
\&        lj::Round
\&        lj::Bevel
\&        lj::Miter
.Ve
.SS "lp::  \- predefined line pattern styles"
.IX Subsection "lp:: - predefined line pattern styles"
See \*(L"linePattern\*(R" in Prima::Drawable
.PP
.Vb 9
\&        lp::Null           #    ""              /*              */
\&        lp::Solid          #    "\e1"            /* _\|_\|_\|_\|_\|_\|_\|_\|_\|_\|_  */
\&        lp::Dash           #    "\ex9\e3"         /* _\|_ _\|_ _\|_ _\|_  */
\&        lp::LongDash       #    "\ex16\e6"        /* _\|_\|_\|_\|_ _\|_\|_\|_\|_  */
\&        lp::ShortDash      #    "\e3\e3"          /* _ _ _ _ _ _  */
\&        lp::Dot            #    "\e1\e3"          /* . . . . . .  */
\&        lp::DotDot         #    "\e1\e1"          /* ............ */
\&        lp::DashDot        #    "\ex9\e6\e1\e3"     /* _._._._._._  */
\&        lp::DashDotDot     #    "\ex9\e3\e1\e3\e1\e3" /* _.._.._.._.. */
.Ve
.SS "im::  \- image types"
.IX Subsection "im:: - image types"
See \*(L"type\*(R" in Prima::Image.
.IP "Bit depth constants" 4
.IX Item "Bit depth constants"
.Vb 8
\&        im::bpp1
\&        im::bpp4
\&        im::bpp8
\&        im::bpp16
\&        im::bpp24
\&        im::bpp32
\&        im::bpp64
\&        im::bpp128
.Ve
.IP "Pixel format constants" 4
.IX Item "Pixel format constants"
.Vb 6
\&        im::Color
\&        im::GrayScale
\&        im::RealNumber
\&        im::ComplexNumber
\&        im::TrigComplexNumber
\&        im::SignedInt
.Ve
.IP "Mnemonic image types" 4
.IX Item "Mnemonic image types"
.Vb 10
\&        im::Mono          \- im::bpp1
\&        im::BW            \- im::bpp1 | im::GrayScale
\&        im::16            \- im::bpp4
\&        im::Nibble        \- im::bpp4
\&        im::256           \- im::bpp8
\&        im::RGB           \- im::bpp24
\&        im::Triple        \- im::bpp24
\&        im::Byte          \- gray 8\-bit unsigned integer
\&        im::Short         \- gray 16\-bit unsigned integer 
\&        im::Long          \- gray 32\-bit unsigned integer 
\&        im::Float         \- float
\&        im::Double        \- double
\&        im::Complex       \- dual float
\&        im::DComplex      \- dual double
\&        im::TrigComplex   \- dual float
\&        im::TrigDComplex  \- dual double
.Ve
.IP "Extra formats" 4
.IX Item "Extra formats"
.Vb 5
\&        im::fmtBGR
\&        im::fmtRGBI
\&        im::fmtIRGB
\&        im::fmtBGRI
\&        im::fmtIBGR
.Ve
.IP "Masks" 4
.IX Item "Masks"
.Vb 3
\&        im::BPP      \- bit depth constants
\&        im::Category \- category constants
\&        im::FMT      \- extra format constants
.Ve
.SS "ict:: \- image conversion types"
.IX Subsection "ict:: - image conversion types"
See \*(L"conversion\*(R" in Prima::Image.
.PP
.Vb 4
\&        ict::None            \- no dithering
\&        ict::Ordered         \- 8x8 ordered halftone dithering
\&        ict::ErrorDiffusion  \- error diffusion dithering with static palette
\&        ict::Optimized       \- error diffusion dithering with optimized palette
.Ve
.SS "is::  \- image statistics indices"
.IX Subsection "is:: - image statistics indices"
See \*(L"stats\*(R" in Prima::Image.
.PP
.Vb 7
\&        is::RangeLo  \- minimum pixel value
\&        is::RangeHi  \- maximum pixel value
\&        is::Mean     \- mean value
\&        is::Variance \- variance
\&        is::StdDev   \- standard deviation
\&        is::Sum      \- sum of pixel values
\&        is::Sum2     \- sum of squares of pixel values
.Ve
.SS "kb::  \- keyboard virtual codes"
.IX Subsection "kb:: - keyboard virtual codes"
See also \*(L"KeyDown\*(R" in Prima::Widget.
.IP "Modificator keys" 4
.IX Item "Modificator keys"
.Vb 4
\&        kb::ShiftL   kb::ShiftR   kb::CtrlL      kb::CtrlR
\&        kb::AltL     kb::AltR     kb::MetaL      kb::MetaR
\&        kb::SuperL   kb::SuperR   kb::HyperL     kb::HyperR
\&        kb::CapsLock kb::NumLock  kb::ScrollLock kb::ShiftLock
.Ve
.IP "Keys with character code defined" 4
.IX Item "Keys with character code defined"
.Vb 2
\&        kb::Backspace  kb::Tab    kb::Linefeed   kb::Enter
\&        kb::Return     kb::Escape kb::Esc        kb::Space
.Ve
.IP "Function keys" 4
.IX Item "Function keys"
.Vb 3
\&        kb::F1 .. kb::F30
\&        kb::L1 .. kb::L10
\&        kb::R1 .. kb::R10
.Ve
.IP "Other" 4
.IX Item "Other"
.Vb 8
\&        kb::Clear    kb::Pause   kb::SysRq  kb::SysReq
\&        kb::Delete   kb::Home    kb::Left   kb::Up
\&        kb::Right    kb::Down    kb::PgUp   kb::Prior
\&        kb::PageUp   kb::PgDn    kb::Next   kb::PageDown
\&        kb::End      kb::Begin   kb::Select kb::Print
\&        kb::PrintScr kb::Execute kb::Insert kb::Undo
\&        kb::Redo     kb::Menu    kb::Find   kb::Cancel
\&        kb::Help     kb::Break   kb::BackTab
.Ve
.IP "Masking constants" 4
.IX Item "Masking constants"
.Vb 3
\&        kb::CharMask \- character codes
\&        kb::CodeMask \- virtual key codes ( all other kb:: values )
\&        kb::ModMask  \- km:: values
.Ve
.SS "km::  \- keyboard modifiers"
.IX Subsection "km:: - keyboard modifiers"
See also \*(L"KeyDown\*(R" in Prima::Widget.
.PP
.Vb 6
\&        km::Shift
\&        km::Ctrl
\&        km::Alt
\&        km::KeyPad
\&        km::DeadKey
\&        km::Unicode
.Ve
.SS "mt:: \- modality types"
.IX Subsection "mt:: - modality types"
See \*(L"get_modal\*(R" in Prima::Window, \*(L"get_modal_window\*(R" in Prima::Window
.PP
.Vb 3
\&        mt::None
\&        mt::Shared
\&        mt::Exclusive
.Ve
.SS "nt::  \- notification types"
.IX Subsection "nt:: - notification types"
Used in \f(CW\*(C`Prima::Component::notification_types\*(C'\fR to describe
event flow.
.PP
See also \*(L"Flow\*(R" in Prima::Object.
.IP "Starting point constants" 4
.IX Item "Starting point constants"
.Vb 2
\&        nt::PrivateFirst
\&        nt::CustomFirst
.Ve
.IP "Direction constants" 4
.IX Item "Direction constants"
.Vb 2
\&        nt::FluxReverse
\&        nt::FluxNormal
.Ve
.IP "Complexity constants" 4
.IX Item "Complexity constants"
.Vb 3
\&        nt::Single
\&        nt::Multiple
\&        nt::Event
.Ve
.IP "Composite constants" 4
.IX Item "Composite constants"
.Vb 6
\&        nt::Default       ( PrivateFirst | Multiple | FluxReverse)
\&        nt::Property      ( PrivateFirst | Single   | FluxNormal )
\&        nt::Request       ( PrivateFirst | Event    | FluxNormal )
\&        nt::Notification  ( CustomFirst  | Multiple | FluxReverse )
\&        nt::Action        ( CustomFirst  | Single   | FluxReverse )
\&        nt::Command       ( CustomFirst  | Event    | FluxReverse )
.Ve
.SS "mb::  \- mouse buttons"
.IX Subsection "mb:: - mouse buttons"
See also \*(L"MouseDown\*(R" in Prima::Widget.
.PP
.Vb 8
\&        mb::b1 or mb::Left
\&        mb::b2 or mb::Middle
\&        mb::b3 or mb::Right
\&        mb::b4
\&        mb::b5
\&        mb::b6
\&        mb::b7
\&        mb::b8
.Ve
.SS "mb:: \- message box constants"
.IX Subsection "mb:: - message box constants"
.IP "Message box and modal result button commands" 4
.IX Item "Message box and modal result button commands"
See also \*(L"modalResult\*(R" in Prima::Window, \*(L"modalResult\*(R" in Prima::Button.
.Sp
.Vb 8
\&        mb::OK, mb::Ok
\&        mb::Cancel
\&        mb::Yes
\&        mb::No
\&        mb::Abort
\&        mb::Retry
\&        mb::Ignore
\&        mb::Help
.Ve
.IP "Message box composite ( multi-button ) constants" 4
.IX Item "Message box composite ( multi-button ) constants"
.Vb 3
\&        mb::OKCancel, mb::OkCancel
\&        mb::YesNo
\&        mb::YesNoCancel
.Ve
.IP "Message box icon and bell constants" 4
.IX Item "Message box icon and bell constants"
.Vb 4
\&        mb::Error
\&        mb::Warning
\&        mb::Information
\&        mb::Question
.Ve
.SS "ps:: \- paint states"
.IX Subsection "ps:: - paint states"
.Vb 3
\&        ps::Disabled    \- can neither draw, nor get/set graphical properties on an object
\&        ps::Enabled     \- can both draw and get/set graphical properties on an object
\&        ps::Information \- can only get/set graphical properties on an object
.Ve
.PP
For brevity, ps::Disabled is equal to 0 so this allows for simple boolean testing whether one can 
get/set graphical properties on an object.
.PP
See \*(L"get_paint_state\*(R" in Drawable.
.SS "rop:: \- raster operation codes"
.IX Subsection "rop:: - raster operation codes"
See \*(L"Raster operations\*(R" in Prima::Drawable
.PP
.Vb 10
\&        rop::Blackness      #   = 0 
\&        rop::NotOr          #   = !(src | dest) 
\&        rop::NotSrcAnd      #  &= !src 
\&        rop::NotPut         #   = !src 
\&        rop::NotDestAnd     #   = !dest & src 
\&        rop::Invert         #   = !dest 
\&        rop::XorPut         #  ^= src 
\&        rop::NotAnd         #   = !(src & dest) 
\&        rop::AndPut         #  &= src 
\&        rop::NotXor         #   = !(src ^ dest) 
\&        rop::NotSrcXor      #     alias for rop::NotXor
\&        rop::NotDestXor     #     alias for rop::NotXor
\&        rop::NoOper         #   = dest 
\&        rop::NotSrcOr       #  |= !src 
\&        rop::CopyPut        #   = src 
\&        rop::NotDestOr      #   = !dest | src 
\&        rop::OrPut          #  |= src 
\&        rop::Whiteness      #   = 1
.Ve
.SS "sbmp:: \- system bitmaps indices"
.IX Subsection "sbmp:: - system bitmaps indices"
See also Prima::StdBitmap.
.PP
.Vb 10
\&        sbmp::Logo
\&        sbmp::CheckBoxChecked
\&        sbmp::CheckBoxCheckedPressed
\&        sbmp::CheckBoxUnchecked
\&        sbmp::CheckBoxUncheckedPressed
\&        sbmp::RadioChecked
\&        sbmp::RadioCheckedPressed
\&        sbmp::RadioUnchecked
\&        sbmp::RadioUncheckedPressed
\&        sbmp::Warning
\&        sbmp::Information
\&        sbmp::Question
\&        sbmp::OutlineCollaps
\&        sbmp::OutlineExpand
\&        sbmp::Error
\&        sbmp::SysMenu
\&        sbmp::SysMenuPressed
\&        sbmp::Max
\&        sbmp::MaxPressed
\&        sbmp::Min
\&        sbmp::MinPressed
\&        sbmp::Restore
\&        sbmp::RestorePressed
\&        sbmp::Close
\&        sbmp::ClosePressed
\&        sbmp::Hide
\&        sbmp::HidePressed
\&        sbmp::DriveUnknown
\&        sbmp::DriveFloppy
\&        sbmp::DriveHDD
\&        sbmp::DriveNetwork
\&        sbmp::DriveCDROM
\&        sbmp::DriveMemory
\&        sbmp::GlyphOK
\&        sbmp::GlyphCancel
\&        sbmp::SFolderOpened
\&        sbmp::SFolderClosed
\&        sbmp::Last
.Ve
.SS "sv::  \- system value indices"
.IX Subsection "sv:: - system value indices"
See also \*(L"get_system_value\*(R" in Prima::Application
.PP
.Vb 10
\&        sv::YMenu            \- height of menu bar in top\-level windows
\&        sv::YTitleBar        \- height of title bar in top\-level windows
\&        sv::XIcon            \- width and height of main icon dimensions, 
\&        sv::YIcon              acceptable by the system
\&        sv::XSmallIcon       \- width and height of alternate icon dimensions,  
\&        sv::YSmallIcon         acceptable by the system 
\&        sv::XPointer         \- width and height of mouse pointer icon
\&        sv::YPointer           acceptable by the system  
\&        sv::XScrollbar       \- width of the default vertical scrollbar
\&        sv::YScrollbar       \- height of the default horizontal scrollbar 
\&        sv::XCursor          \- width of the system cursor
\&        sv::AutoScrollFirst  \- the initial and the repetitive 
\&        sv::AutoScrollNext     scroll timeouts
\&        sv::InsertMode       \- the system insert mode
\&        sv::XbsNone          \- widths and heights of the top\-level window
\&        sv::YbsNone            decorations, correspondingly, with borderStyle
\&        sv::XbsSizeable        bs::None, bs::Sizeable, bs::Single, and
\&        sv::YbsSizeable        bs::Dialog. 
\&        sv::XbsSingle          
\&        sv::YbsSingle
\&        sv::XbsDialog
\&        sv::YbsDialog
\&        sv::MousePresent     \- 1 if the mouse is present, 0 otherwise
\&        sv::MouseButtons     \- number of the mouse buttons
\&        sv::WheelPresent     \- 1 if the mouse wheel is present, 0 otherwise
\&        sv::SubmenuDelay     \- timeout ( in ms ) before a sub\-menu shows on 
\&                                an implicit selection
\&        sv::FullDrag         \- 1 if the top\-level windows are dragged dynamically, 
\&                               0 \- with marquee mode
\&        sv::DblClickDelay    \- mouse double\-click timeout in milliseconds
\&        sv::ShapeExtension   \- 1 if Prima::Widget::shape functionality is supported, 
\&                               0 otherwise
\&        sv::ColorPointer     \- 1 if system accepts color pointer icons.
\&        sv::CanUTF8_Input    \- 1 if system can generate key codes in unicode 
\&        sv::CanUTF8_Output   \- 1 if system can output utf8 text
\&        sv::CompositeDisplay \- 1 if system uses double\-buffering for the desktop
.Ve
.SS "ta::  \- alignment constants"
.IX Subsection "ta:: - alignment constants"
Used in: Prima::InputLine, Prima::ImageViewer, Prima::Label, Prima::Terminals.
.PP
.Vb 3
\&        ta::Left
\&        ta::Right
\&        ta::Center
\&
\&        ta::Top
\&        ta::Bottom
\&        ta::Middle
.Ve
.SS "tw::  \- text wrapping constants"
.IX Subsection "tw:: - text wrapping constants"
See \*(L"text_wrap\*(R" in Prima::Drawable
.PP
.Vb 10
\&        tw::CalcMnemonic          \- calculates tilde underline position
\&        tw::CollapseTilde         \- removes escaping tilde from text
\&        tw::CalcTabs              \- wraps text with respect to tab expansion
\&        tw::ExpandTabs            \- expands tab characters
\&        tw::BreakSingle           \- determines if text is broken to single 
\&                                    characters when text cannot be fit
\&        tw::NewLineBreak          \- breaks line on newline characters 
\&        tw::SpaceBreak            \- breaks line on space or tab characters
\&        tw::ReturnChunks          \- returns wrapped text chunks
\&        tw::ReturnLines           \- returns positions and lengths of wrapped 
\&                                    text chunks
\&        tw::WordBreak             \- defines if text break by width goes by the 
\&                                    characters or by the words
\&        tw::ReturnFirstLineLength \- returns length of the first wrapped line 
\&        tw::Default               \- tw::NewLineBreak | tw::CalcTabs | tw::ExpandTabs |
\&                                    tw::ReturnLines | tw::WordBreak
.Ve
.SS "wc::  \- widget classes"
.IX Subsection "wc:: - widget classes"
See \*(L"widgetClass\*(R" in Prima::Widget
.PP
.Vb 10
\&        wc::Undef
\&        wc::Button
\&        wc::CheckBox
\&        wc::Combo
\&        wc::Dialog
\&        wc::Edit
\&        wc::InputLine
\&        wc::Label
\&        wc::ListBox
\&        wc::Menu
\&        wc::Popup
\&        wc::Radio
\&        wc::ScrollBar
\&        wc::Slider
\&        wc::Widget, wc::Custom
\&        wc::Window
\&        wc::Application
.Ve
.SS "ws::  \- window states"
.IX Subsection "ws:: - window states"
See \*(L"windowState\*(R" in Prima::Window
.PP
.Vb 3
\&        ws::Normal
\&        ws::Minimized
\&        ws::Maximized
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Dmitry Karasik, <dmitry@karasik.eu.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Prima, Prima::Classes

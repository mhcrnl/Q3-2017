



To Install
----------


SUPER-FAST INSTRUCTIONS

0. Make sure you have the needed Perl installation
1. Extract the files from grsshopper.tar.gz
2. Upload grsshopper.sql to your server
	Set up a MySQL database and run grsshopper.sql to configure it
	> mysql --user=username --password=password dbname < grsshopper.sql
3. Edit the values in the configuration file grsshopper.downes.ca
   Rename the configuration file to the URL of your site and
   upload it to cgi-bin/data
   eg. cgi-bin/data/www.downes.ca
4. Install the CGI and PL files in /cgi-bin
   Make sure to to give them run permissions. > chmod 755 *
5. Go to cgi-bin/admin.cgi in your web browser and log in
   with User ID: Admin  Password:  admin
   (change your password right away)
   
   
   
SOMEWHAT MORE DETAILED INSTRUCTIONS

(*) may already be part of your default setup

Access Your Web Server
----------------------

You will need to set up access to your web server using FTP and SSH. (*)

- FTP - File Transfer Protocol - use to upload files
  See: http://en.wikipedia.org/wiki/File_Transfer_Protocol

- SSH - Secure Shell - use to open a terminal, edit files, and
  execute commands.
  http://en.wikipedia.org/wiki/Secure_Shell
  
Your Internet Service Provider (ISP) will enable both FTP and SSH (if they
don't, switch providers).



Web Server Directories
----------------------

- install an Apache Web Server (*)
- install Perl and (preferably) mod Perl (*)

NOTE: If you are using an account provided by an Internet Service Provider,
your web server has almost certainly been installed for you.

- create the following directories (use FTP or SSH):
    - /var/www/cgi-bin/
    - /var/www/cgi-bin/data/
    - /var/www/website/
    - /var/www/website/images/
    
Note: if you want, you can use the default data directories that
come with your server as provided by your ISP, ie. 
    - /var/user/fred/htdocs/
    - /var/user/fred/htdocs/cgi-bin
You will still want to create the data, images, etc. subdirectories
    
OPTIONAL: Web Server - Multi-User    
- for multi-user, create directories for each site:
    - /var/www/cgi-bin/
    - /var/www/cgi-bin/data/
    - /var/www/website1/
    - /var/www/website1/images/
    - /var/www/website2/
    - /var/www/website2/images/
    - /var/www/website3/
    - /var/www/website3/images/    
etc.



Web Server Configuration (*)
----------------------------

NOTE: if you used default directories for your web server, and are
running a single-user site, you will not need to execute this step.
Jump directly to the next section, Database.

NOTE: Changes to web server configurations can really mess things up and
also create security holes. Web server configuration should be 
changed only by an experienced admin.

  locate httpd.conf on your web server 
  (mine is in /etc/httpd/conf/httpd.conf )
  and edit as follows:

- make sure script alias is on (find this in your httpd.conf) and
  enable mod Perl (mod perl is optional, but recommended).
  See http://oceanpark.com/notes/howto_redhat8-apache2-mod_perl.html
  
  LoadModule perl_module modules/mod_perl.so
  
  ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

	<Directory "/var/www/cgi-bin">
   	 AllowOverride None
   	 SetHandler perl-script
   	 PerlResponseHandler ModPerl::PerlRun
   	 PerlOptions +ParseHeaders
   	 Options +ExecCGI
   	 Order allow,deny
   	 Allow from all
	</Directory>


- for multi-user sites, or for custom directories, enable virtual hosts

   NameVirtualHost *:80
   
  and for each website, define the virtual host as follows,
  changing the values for document root and server name as appropriate:
  
  <VirtualHost *:80>
   ServerAdmin stephen@downes.ca
   DocumentRoot /var/www/website
   ServerName www.yourwebsite.ca
   ErrorLog logs/web-error.log
   CustomLog logs/web-access.log common
   RewriteEngine on
   RewriteRule ^/cgi-bin/clist/(.*) /var/www/cgi-bin/clist.cgi?req=$1
   RewriteRule ^/page/(.*) /var/www/cgi-bin/page.cgi?page=$1
   RewriteRule ^/post/(.*) /var/www/cgi-bin/page.cgi?post=$1
   RewriteRule ^/topic/(.*) /var/www/cgi-bin/page.cgi?topic=$1
   RewriteRule ^/feed/(.*) /var/www/cgi-bin/page.cgi?feed=$1
   RewriteRule ^/event/(.*) /var/www/cgi-bin/page.cgi?event=$1
   RewriteRule ^/journal/(.*) /var/www/cgi-bin/page.cgi?journal=$1
   RewriteRule ^/person/(.*) /var/www/cgi-bin/page.cgi?person=$1
   RewriteRule ^/presentation/(.*) /var/www/cgi-bin/page.cgi?presentation=$1
</VirtualHost>

NOTE: if you do not have access to httpd.conf, .htaccess files may also be used to express rewrite rules. See http://corz.org/serv/tricks/htaccess2.php
   
   
Perl Installation
-----------------

Your website should be capable of running Perl 5.00 or better. If you are
using a standard Linux system, you can be sure Perl is installed and ready
to run.

Perl also requires a set of modules (called 'Perl Modules' or PM) to support
some activities. gRSShopper uses the minimal number of modules possible. Most
modules are supported already in your Perl installation. However, you may
need to install Perl modules.

Here is the list of modules required by gRSShopper:

	CGI. This module handles form input functions. 
	CGI::Carp. This module displays error messages. 
	DBI. This module handles database functions. 
	LWP. This module connects to other web servers. 
	LWP::UserAgent. This module emulates a web browser. 
	XML::Feed. This module parses RSS and Atom. 
	XML::OPML. This module parses OPML. 
	XML::LibXML. This module does generic XML parsing. 
	Net::OpenID::Consumer. This module supports OpenID logins. 

You can test your installation by installing and running the program
server_test.cgi in your cgi directory. This program is included with
this software package (see CGI and PL Files, below).

Database
--------

- install a MySQL Database (*)
  Please see http://dev.mysql.com/doc/refman/5.0/en/installing.html
  
  NOTE: if you are hosted by an Internet Service Provider, you probably
  already have MySQL installed. Check your provider's control panel.
  
- create a MySQL user, create a MySQL database, give the user permission
  to create, update and delete records and tables.
  See http://dev.mysql.com/doc/refman/5.0/en/connecting-disconnecting.html
  
  NOTE: your ISP may have already provided you with a database user name 
  and password
  
  What you will need to create or determine here:
     - the address of the MySQL server (can be 'localhost')
     - the name of the database (default name is: grsshopper )
     - User ID of MySQL user
     - Password of MySQL user

- execute the provided SQL in grsshopper.sql 

  The easiest way is to upload the SQL file, grsshopper.sql, to the website
  using FTP and then execute is as a MySQL command by typing the following at
  the command prompt using SSH:
  
  > mysql --user=username --password=password dbname < grsshopper.sql
  
  where:
      - username is the User ID of MySQL user
      - password is the Password of MySQL user
      - dbname is the name of the database (default name is: grsshopper )
      
NOTE: you need to install a separate database for each website. You can use
the same SQL file; no changes are needed. You can use the same user name and password, though if security is an issue you should use different user names
and passwords.

NOTE: other databases, like PostgreSQL, might work as well. Hasn't been tested, 
though.


Site Congiguration
------------------

Each website has its own site configuration file, where the name of the
file is the URL of the website. 

NOTE: gRSShopper does not assume website.com and www.website.com are the
same site. If your website supports both, you will need two configuration
files.

Edit the configuration file for each website to provide the following
values:

# Site Information

st_name		Name of the website
st_url		Base URL of the website
st_urlf		File directory corresponding to Base URL
st_cgi		CGI URL of the website
st_cgif		File directory corresponding to CGI URL
st_img		Image URL
st_file		Upload file directory
st_photo		Upload photo directory
st_copy		Copyright notice
st_pub		Publisher name
st_crea		Creator name
st_login	   URL of login script
st_anon		Name of anonymous user
st_anon_id	User ID number of anonymous number
st_license	Site license notice
st_feed		URL of sitewide RSS feed

# Pages

pg_theme		URL for list of site themes
pg_update	Page update frequency (86400 = 1 day)

# Discussion List

ds_name		Name of the discussion list
ds_list		Number of posts to show
ds_desc		Click on a thread title to read the cool posts.
ds_title	   Maximum characters in title
ds_jslen	   Maximum lenth of Javascript title

# Database

db_name		the name of the database (default name is: grsshopper )
db_host		address of the MySQL server (can be 'localhost')
db_user		User ID of MySQL user
db_pass		Password of MySQL user


# Harvester

hv_htm		harvest html pages (yes/no)
hv_trim		trim harvested entries to how many characyers?

# Cookies

co_host		host URL for cookies (should be site URL)

# Email

em_smtp		location of sendmail email script
em_from		'from' email address
em_copy		'copy to' email address


See the file grsshopper.downes.ca for a sample configuration file

NOTE: your configuration file contains sensitive information. Ensure that
your configuration file is protected.

- Once the configuration file has been edited, upload it to cgi-bin/data
  using FTP.
  

CGI and PL Files
----------------

Assuming that your script directory is cgi-bin, then upload the 
grsshopper.tar.gz file to cgi-bin/grshopper.tar.gz and extract the
archive using the following command:

   tar -xvf grsshopper.tar.gz
   
Note that this extraction does *not* create a new directory for the
files (it will create some empty subdirectories used for caches); the files
are extracted directly to cgi-bin. If you wish to restrict Grsshopper
to a subdirectory, create the subdirectory and extract the files in
that subdirectory.

The files should extract with the appropriate access permissions,
however, if not, change permissions using chmod to '755'. In some cases
you may also have to change the file owner and group parameters in
order to grant the web server permission to run the files.

Here is the full file listing you should extract:

cgi-bin/admin.cgi		Admin functions
     archive.cgi        	Archive access
     cchat.cgi			Conference Chat
     common.pl  		Common Functions
     edurss02.cgi		Redirect & Collect Stats
     harvest.cgi		RSS Harvester
     login.cgi			Login and Registration
     page.cgi			Page Display
     serrver_test.cgi		Test Server Configuration
     wiki.cgi			Wiki
	     
Folders:

cgi-bin/data			Website Data
  logs				Website Logs
		  





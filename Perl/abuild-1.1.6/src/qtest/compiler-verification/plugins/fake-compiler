#!/usr/bin/env perl
require 5.008;
use warnings;
use strict;
use File::Basename;

my $whoami = basename($0);

my $out = undef;
my $c = 0;
my $obj = undef;
while (@ARGV)
{
    my $arg = shift(@ARGV);
    if ($arg eq '-o')
    {
	if (@ARGV)
	{
	    $out = shift(@ARGV);
	}
    }
    elsif ($arg eq '-c')
    {
	$c = 1;
    }
    elsif ($arg =~ m/(.*)\.c(c|pp)?$/)
    {
	if (! defined $obj)
	{
	    $obj = "$1.o";
	}
	if (open(F,"<$arg"))
	{
	    # This is fragile.  We are trying to fake out autoconf
	    # here.  This could break if autoconf generates
	    # significantly different test code in configure, which is
	    # not all that likely.
	    while (<F>)
	    {
		# This appears in the file that tests whether we are
		# using gcc.  We want autoconf to decide that we are
		# not using gcc.
		if (m/#ifndef\s+__GNUC__/)
		{
		    exit 2;
		}
		# This appears in the test for the preprocessor.
		# configure wants the preprocessor to exit if a
		# non-existent header file is referenced.
		if (m/ac_nonexistent.h/)
		{
		    exit 2;
		}
	    }
	    close(F);
	}
    }
}

if ($c && (! defined $out) && (defined $obj))
{
    $out = $obj;
}
$out = 'a.out' unless defined $out;
open(O, ">$out");
print O "exit 1\n";
close(O);
chmod 0777, $out;

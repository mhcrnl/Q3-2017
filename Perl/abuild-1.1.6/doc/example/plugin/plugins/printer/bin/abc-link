#!/usr/bin/env perl

require 5.008;
use warnings;
use strict;
use File::Copy;
use File::Basename;

my $whoami = basename($0);

my @libdirs = ();
my @libs = ();
my @objs = ();
my $bin = undef;
while (@ARGV)
{
    my $arg = shift(@ARGV);
    if ($arg eq '-o')
    {
	die "$whoami: -o requires an argument\n" unless @ARGV;
	push(@objs, shift(@ARGV));
    }
    elsif ($arg eq '-L')
    {
	die "$whoami: -L requires an argument\n" unless @ARGV;
	push(@libdirs, shift(@ARGV));
    }
    elsif ($arg eq '-l')
    {
	die "$whoami: -l requires an argument\n" unless @ARGV;
	push(@libs, shift(@ARGV));
    }
    elsif ($arg eq '-b')
    {
	die "$whoami: -b requires an argument\n" unless @ARGV;
	$bin = shift(@ARGV);
    }
}
die "$whoami: -b is required\n" unless defined $bin;

open(O, ">$bin") or die "$whoami: can't write to $bin: $!\n";

lib:
foreach my $lib (@libs)
{
    foreach my $libdir (@libdirs)
    {
	my $l = "$libdir/lib-$lib";
	if (-f $l)
	{
	    print O "\n------ ==> $l <== ------\n\n";
	    open(I, "<$l") or die "$whoami: can't read $l: $!\n";
	    while (<I>)
	    {
		print O;
	    }
	    close(I);
	    next lib;
	}
    }
}

foreach my $obj (@objs)
{
    open(I, "<$obj") or die "$whoami: can't open $obj: $!\n";
    print O "\n------ $obj ------\n\n";
    while (<I>)
    {
	print O;
    }
    close(I);
}

close(O);

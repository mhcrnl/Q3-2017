## ctk: description
## ctk: title
## ctk: application '' ''
## ctk: strict  0
## ctk: code  0
## ctk: testCode  1
## ctk: subroutineName dlgNotebook
## ctk: autoExtractVariables  1
## ctk: autoExtract2Local  1
## ctk: modal 0
## ctk: isolGeom 0
## ctk: version 4.012
## ctk: onDeleteWindow  sub{1}
## ctk: Toplevel  1
## ctk: argList -title , 'Test Notebook'
## ctk: 2008 05 27 - 16:31:16

## ctk: uselib start

## ctk: uselib end

use Tk;
 $mw=MainWindow->new(-title=>'');
## ctk: Globalvars

use vars qw/$option1 $option2 $option3 $option4 $option5 $option6 $sub $subclasse @records/;

## ctk: Globalvars end
&main::init();
&main::dlgNotebook($mw,-title , 'Test Notebook');
MainLoop;

sub dlgNotebook {
my $hwnd = shift;
my (%args) = @_;
my $rv;
##
## ctk: Localvars
## ctk: Localvars end
##
my $mw = $hwnd->Toplevel();
$mw->configure(-title=> (exists $args{-title})? $args{-title}:'');
$mw->protocol('WM_DELETE_WINDOW',sub{1});


## ctk: code generated by ctk_w version '4.012'
## ctk: instantiate and display widgets

$w_Frame_001 = $mw -> Frame ( -relief , 'flat'  ) -> pack(-side=>'top', -anchor=>'nw', -fill=>'both', -expand=>1);


$w_NoteBook_002 = $w_Frame_001 -> NoteBook ( -background , '#80ffff' , -foreground , '#ffffff' , -focuscolor , '#8080ff' , -backpagecolor , '#0080ff' , -inactivebackground , '#0080c0'  ) -> pack(-anchor=>'nw', -side=>'top', -pady=>5, -fill=>'both', -expand=>1, -padx=>5);


$w_Frame_015 = $w_Frame_001 -> Frame (  ) -> pack(-anchor=>'nw', -side=>'top', -fill=>'both', -expand=>1);


$w_Frame_017 = $w_Frame_001 -> Frame (  ) -> pack(-anchor=>'sw', -side=>'bottom', -fill=>'x', -expand=>1);


$w_NoteBookFrame_003 = $w_NoteBook_002 -> add ( 'w_NoteBookFrame_003', -anchor , 'nw' , -label , 'Record view' , -justify , 'left' , -createcmd , sub{print"\ncreatecmd1 @_" } , -state , 'normal'  );


$w_NoteBookFrame_004 = $w_NoteBook_002 -> add ( 'w_NoteBookFrame_004', -raisecmd , sub{print"\nraisecmd2 @_"} , -justify , 'left' , -label , 'Browse view' , -createcmd , sub{print"\ncreatecmd2 @_"} , -state , 'normal'  );


$wr_NoteBookFrame_005 = $w_NoteBook_002 -> add ( 'wr_NoteBookFrame_005', -raisecmd , sub{print"\nraisecmd3 @_"} , -justify , 'left' , -label , 'Options' , -createcmd , sub{ print "\ncreatecmd3 @_"  } , -state , 'normal'  );


$w_Button_018 = $w_Frame_015 -> Button ( -background , '#ffffff' , -command , sub{ &do_exit_1 } , -state , 'normal' , -text , 'OK' , -relief , 'raised'  ) -> pack(-side=>'left', -anchor=>'nw', -pady=>2, -fill=>'x', -expand=>1);


$w_Button_019 = $w_Frame_015 -> Button ( -background , '#ffffff' , -command , \&do_exit_0 , -state , 'normal' , -text , 'Cancel'  ) -> pack(-anchor=>'nw', -side=>'left', -pady=>2, -fill=>'x', -expand=>1);


$w_Label_020 = $w_Frame_017 -> Label ( -background , '#c0c0c0' , -justify , 'left' , -relief , 'flat' , -text , 'Status and messages.'  ) -> pack(-anchor=>'nw', -side=>'left', -fill=>'x', -expand=>1);


$wr_018 = $wr_NoteBookFrame_005 -> Frame ( -borderwidth , 2 , -relief , 'flat'  ) -> pack(-side=>'top', -anchor=>'nw', -fill=>'both', -expand=>1);


$w_Frame_005 = $w_NoteBookFrame_003 -> Frame ( -relief , 'flat'  ) -> pack(-side=>'top', -anchor=>'nw', -pady=>5, -padx=>5);


$w_Frame_009 = $w_NoteBookFrame_003 -> Frame ( -relief , 'flat'  ) -> pack(-side=>'top', -anchor=>'nw', -pady=>5, -padx=>5);


$w_ScrolledListbox_014 = $w_NoteBookFrame_004 -> Scrolled ( 'Listbox' , -background , '#ffffff' , -borderwidth , 1 , -selectmode , 'single' , -relief , 'sunken' , -scrollbars , 'se'  ) -> pack(-anchor=>'nw', -side=>'top', -fill=>'both', -expand=>1, -padx=>5);
$w_ScrolledListbox_014->insert('end',@records);

$wr_019 = $wr_018 -> Checkbutton ( -relief , 'flat' , -variable , \$option1 , -state , 'normal' , -justify , 'left' , -text , 'Option___1' , -onvalue , 1  ) -> grid(-row=>0, -sticky=>'nw', -column=>0);


$wr_020 = $wr_018 -> Checkbutton ( -state , 'normal' , -justify , 'left' , -relief , 'flat' , -text , 'Option___2' , -variable , \$option2 , -onvalue , 2  ) -> grid(-row=>1, -column=>0, -sticky=>'nw');


$wr_021 = $wr_018 -> Checkbutton ( -relief , 'flat' , -variable , \$option3 , -state , 'normal' , -justify , 'left' , -text , 'Option___3' , -onvalue , 3  ) -> grid(-row=>2, -column=>0, -sticky=>'nw');


$wr_022 = $wr_018 -> LabEntry ( -background , '#ffffff' , -label , 'Size___1' , -labelPack , [-side , "left" , -anchor , "n"  ] , -width , 6 , -state , 'normal' , -justify , 'left' , -relief , 'sunken' , -textvariable , \$option4  ) -> grid(-row=>0, -sticky=>'e', -column=>1);


$wr_023 = $wr_018 -> LabEntry ( -background , '#ffffff' , -justify , 'left' , -label , 'Size___2' , -relief , 'sunken' , -labelPack , [-side , "left" , -anchor , "n" ] , -textvariable , \$option5 , -state , 'normal' , -width , 6  ) -> grid(-row=>1, -column=>1, -sticky=>'ne');


$wr_024 = $wr_018 -> LabEntry ( -background , '#ffffff' , -justify , 'left' , -label , 'Size___3' , -relief , 'sunken' , -labelPack , [-side , "left" , -anchor , "n"  ] , -textvariable , \$option6 , -width , 6 , -state , 'normal'  ) -> grid(-row=>2, -column=>1, -sticky=>'ne');


$w_Label_006 = $w_Frame_005 -> Label ( -relief , 'flat' , -background , '#c0c0c0' , -width , 32 , -justify , 'left' , -text , 'subroutine'  ) -> pack(-side=>'left', -anchor=>'nw', -fill=>'x', -expand=>1);


$w_Entry_007 = $w_Frame_005 -> Entry ( -borderwidth , 1 , -justify , 'left' , -relief , 'sunken' , -textvariable , \$sub , -state , 'normal'  ) -> pack(-anchor=>'nw', -side=>'left', -fill=>'x', -expand=>1);


$w_Label_010 = $w_Frame_009 -> Label ( -relief , 'flat' , -background , '#c0c0c0' , -width , 32 , -justify , 'left' , -text , 'subclasses'  ) -> pack(-side=>'left', -anchor=>'nw', -fill=>'x', -expand=>1);


$w_Entry_011 = $w_Frame_009 -> Entry ( -borderwidth , 1 , -justify , 'left' , -relief , 'sunken' , -textvariable , \$subclasse , -state , 'normal'  ) -> pack(-side=>'left', -anchor=>'nw', -fill=>'x', -expand=>1);


## ctk: end of gened Tk-code


 return $rv;

} ## end of dlgNotebook

## ctk: end of dialog code
## ctk: callbacks
sub init {
	$option1 = 1;
	$option2 = 0;
	$option3 = 0;
	$option4 = 512;
	$option5 = 1024;
	$option6 = 4096;
	$sub = '_testInit';
	$subclasse = 'thisTest';
	@records=(qw/testInit testError testUseCase_1 testUseCase_2 testRecovery_1 testDie_0/);
}
sub do_exit_1 {
	print "\noption___1 = $option1";
	print "\noption___2 = $option2";
	print "\noption___3 = $option3";
	print "\nsize___1 = $option4";
	print "\nsize___2 = $option5";
	print "\nsize___3 = $option6";
	print "\n";
	print "\nsub = $sub";
	print "\n";
	print "\nsubclasse = $subclasse";
	print "\n";
	exit 1
}
sub do_exit_0 {
	print "\ncancelled";
	exit 0
}
## ctk: other code
## ctk: eof 2008 05 27 - 16:31:16
1;	## make perl compiler happy...


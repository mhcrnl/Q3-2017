## ctk: description 
## ctk: title 
## ctk: application '' ''
## ctk: strict  0
## ctk: code  0
## ctk: testCode  1
## ctk: subroutineName dlgNotebook
## ctk: autoExtractVariables  1
## ctk: autoExtract2Local  1
## ctk: modal 0
## ctk: buttons  
## ctk: isolGeom 0
## ctk: version 4.23
## ctk: onDeleteWindow  sub{1}
## ctk: Toplevel  1
## ctk: argList -title , 'Test Notebook' 
## ctk: treewalk D 
## ctk: 2017 10 10 - 08:51:26

## ctk: uselib start

## ctk: uselib end

use Tk;
use Tk::Button;
use Tk::Checkbutton;
use Tk::Frame;
use Tk::LabFrame;
use Tk::Label;
use Tk::Listbox;
use Tk::NoteBook;
 $mw=MainWindow->new(-title=>'');
## ctk: Globalvars

use vars qw/$option1 $option2 $option3 $option4 $option5 $option6 $sub $subclasse @records/;

## ctk: Globalvars end
&main::init();
&main::dlgNotebook($mw,-title , 'Test Notebook');
MainLoop;

sub dlgNotebook {
my $hwnd = shift;
my (%args) = @_;
my $rv;
##
## ctk: Localvars
## ctk: Localvars end
##
my $mw = $hwnd->Toplevel();
$mw->configure(-title=> (exists $args{-title})? $args{-title}:'');
$mw->protocol('WM_DELETE_WINDOW',sub{1});


## ctk: code generated by ctk_w version '4.23' 
## ctk: instantiate and display widgets 

## ctk: widgets generated using treewalk D
$w_Frame_001 = $mw -> Frame ( -relief , 'flat'  ) -> pack(-side=>'top', -fill=>'both', -expand=>1, -anchor=>'nw');

$w_NoteBook_002 = $w_Frame_001 -> NoteBook ( -background , '#80ffff' , -foreground , '#ffffff' , -focuscolor , '#8080ff' , -backpagecolor , '#0080ff' , -inactivebackground , '#0080c0'  ) -> pack(-padx=>5, -anchor=>'nw', -expand=>1, -pady=>5, -fill=>'both', -side=>'top');

$w_NoteBookFrame_003 = $w_NoteBook_002 -> add ( 'w_NoteBookFrame_003', -anchor , 'nw' , -label , 'Record view' , -justify , 'left' , -createcmd , sub{print"\ncreatecmd1 @_" } , -state , 'normal'  );

$w_Frame_005 = $w_NoteBookFrame_003 -> Frame ( -relief , 'flat'  ) -> pack(-side=>'top', -anchor=>'nw', -pady=>5, -padx=>5);

$w_Frame_009 = $w_NoteBookFrame_003 -> Frame ( -relief , 'flat'  ) -> pack(-anchor=>'nw', -pady=>5, -side=>'top', -padx=>5);

$w_NoteBookFrame_004 = $w_NoteBook_002 -> add ( 'w_NoteBookFrame_004', -raisecmd , sub{print"\nraisecmd2 @_"} , -justify , 'left' , -label , 'Browse view' , -createcmd , sub{print"\ncreatecmd2 @_"} , -state , 'normal'  );

$w_ScrolledListbox_014 = $w_NoteBookFrame_004 -> Scrolled ( 'Listbox' , -background , '#ffffff' , -borderwidth , 1 , -selectmode , 'single' , -relief , 'sunken' , -scrollbars , 'se'  ) -> pack(-padx=>5, -anchor=>'nw', -expand=>1, -fill=>'both', -side=>'top');

$wr_NoteBookFrame_005 = $w_NoteBook_002 -> add ( 'wr_NoteBookFrame_005', -raisecmd , sub{print"\nraisecmd3 @_"} , -justify , 'left' , -label , 'Options' , -createcmd , sub{ print "\ncreatecmd3 @_"  } , -state , 'normal'  );

$wr_018 = $wr_NoteBookFrame_005 -> Frame ( -borderwidth , 2 , -relief , 'flat'  ) -> pack(-expand=>1, -fill=>'both', -anchor=>'nw', -side=>'top');

$wr_019 = $wr_018 -> Checkbutton ( -relief , 'flat' , -variable , \$option1 , -state , 'normal' , -justify , 'left' , -text , 'Option___1' , -onvalue , 1  ) -> grid(-column=>0, -sticky=>'nw', -row=>0);

$w_Frame_015 = $w_Frame_001 -> Frame (  ) -> pack(-side=>'top', -fill=>'both', -expand=>1, -anchor=>'nw');

$w_Button_018 = $w_Frame_015 -> Button ( -relief , 'raised' , -command , sub{ &do_exit_1 } , -background , '#ffffff' , -text , 'OK' , -state , 'normal' , -underline , 0  ) -> pack(-side=>'left', -anchor=>'nw', -pady=>2, -expand=>1, -fill=>'x');

$w_Button_019 = $w_Frame_015 -> Button ( -background , '#ffffff' , -command , \&do_exit_0 , -state , 'normal' , -text , 'Cancel'  ) -> pack(-side=>'left', -anchor=>'nw', -pady=>2, -expand=>1, -fill=>'x');

$w_Frame_017 = $w_Frame_001 -> Frame (  ) -> pack(-side=>'bottom', -anchor=>'sw', -fill=>'x', -expand=>1);

$w_Label_020 = $w_Frame_017 -> Label ( -background , '#c0c0c0' , -justify , 'left' , -relief , 'flat' , -text , 'Status and messages.'  ) -> pack(-side=>'left', -anchor=>'nw', -fill=>'x', -expand=>1);

$wr_016 = $mw -> LabFrame ( -label , 'wr_016' , -relief , 'ridge' , -labelside , 'acrosstop'  ) -> pack(-side=>'top', -fill=>'both', -expand=>1, -anchor=>'nw');

## ctk: end of gened Tk-code

$rv = $mw;

 return $rv;

} ## end of dlgNotebook 

## ctk: end of dialog code
## ctk: callbacks
sub init { 1 }

## ctk: other code
## ctk: eof 2017 10 10 - 08:51:26
1;	## make perl compiler happy...


## ctk: description 
## ctk: title 
## ctk: application '' ''
## ctk: strict  0
## ctk: code  0
## ctk: testCode  1
## ctk: subroutineName thisDialog
## ctk: autoExtractVariables  1
## ctk: autoExtract2Local  1
## ctk: modal 0
## ctk: buttons  
## ctk: isolGeom 0
## ctk: version 4.23
## ctk: onDeleteWindow  sub{1}
## ctk: Toplevel  1
## ctk: argList -title , '???' 
## ctk: treewalk D 
## ctk: 2017 10 10 - 09:03:56

## ctk: uselib start

## ctk: uselib end

use Tk;
use Tk::Button;
 $mw=MainWindow->new(-title=>'');
## ctk: Globalvars
## ctk: Globalvars end
&main::init();
&main::thisDialog($mw,-title , '???');
MainLoop;

sub thisDialog {
my $hwnd = shift;
my (%args) = @_;
my $rv;
##
## ctk: Localvars
## ctk: Localvars end
##
my $mw = $hwnd->Toplevel();
$mw->configure(-title=> (exists $args{-title})? $args{-title}:'');
$mw->protocol('WM_DELETE_WINDOW',sub{1});


## ctk: code generated by ctk_w version '4.23' 
## ctk: instantiate and display widgets 

## ctk: widgets generated using treewalk D
$wr_001 = $mw -> Button ( -font , 'wr_001' , -underline , 0 , -text , 'wr_001' , -state , 'normal'  ) -> pack();

## ctk: end of gened Tk-code

$rv = $mw;

 return $rv;

} ## end of thisDialog 

## ctk: end of dialog code
## ctk: callbacks
sub init { 1 }

## ctk: other code
## ctk: eof 2017 10 10 - 09:03:56
1;	## make perl compiler happy...


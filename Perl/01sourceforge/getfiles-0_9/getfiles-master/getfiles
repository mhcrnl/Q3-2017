#!/usr/bin/perl
use strict;
use warnings;
use File::Fetch;
use HTML::SimpleLinkExtor;
use LWP::UserAgent();

my $SOURCEURL="";
my $DESIREDTYPE="";
my $TYPELEN=3;

sub FetchFile
{
	my $CURFILE = shift;
	### build a File::Fetch object ###
	my $ff = File::Fetch->new(uri => $CURFILE);
	### fetch the uri to cwd() ###
	my $where = $ff->fetch() or die $ff->error;
	### fetch the uri to /tmp ###
	#my $where = $ff->fetch( to => '/tmp' );
	### parsed bits from the uri ###
	$ff->uri;
	$ff->scheme;
	$ff->host;
	$ff->path;
	$ff->file;
}

my $num_args = $#ARGV + 1;
if ($num_args != 2) {
    print "Incorrect number of arguments\n";
    print "Usage: getfiles '<URL>' <type>\n";
    exit;
}
$SOURCEURL=$ARGV[0];
$DESIREDTYPE=$ARGV[1];
$TYPELEN = length($DESIREDTYPE);
my $url = URI->new($SOURCEURL);
my $domain = $url->host;
my $content = "";

print "Saving files of type $DESIREDTYPE at URL $SOURCEURL\n";
print "Reading source page\n";
my $ua = LWP::UserAgent->new;
$ua->timeout(60);
$ua->env_proxy;
$ua->agent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.1 Safari/603.1.30');
my $response = $ua->get($SOURCEURL);
if ($response->is_success)
{
    $content = $response->content;
}
else
{
    die $response->status_line;
}

my $extor = HTML::SimpleLinkExtor->new();
$extor->parse($content);
foreach ($extor->a)
{
	if (substr($_, -$TYPELEN) eq $DESIREDTYPE)
	{
		print "Working on: $_\n";
		FetchFile("http://$domain/$_");
	}
}
exit 0;

#!@bin_perl@ -w

# $Header: /cvsroot/ctk-cgi-chkurl/ctk-nettools/Log.pm.in,v 1.1.1.1 2000/11/03 15:18:41 cyrilb Exp $

# ctk-nettools: a perl module to deal with templates by http
# Copyright (C) 2000 Cyril Bouthors (cyril@bouthors.org)
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.

package nettools::Log;

use strict  qw(subs vars refs);

use Unix::Syslog qw(:macros);
use Unix::Syslog qw(:subs);
use Mail::Mailer;
use POSIX;

@nettools::Log::ISA = qw(Exporter);
@nettools::Log::EXPORT = qw(sendAMail mylog);

sub sendAMail
{
  my ($from,$to,$subject,$msg)=@_;
 
  my $mailer = Mail::Mailer->new("");
  $mailer->open({ From => $from,
                To   => $to,
                Subject => $subject
            });
  print $mailer $msg;
 
  #print("sendAMail to $to\n");
  $mailer->close();
}


sub mylog {
    my ($log,$prog_name,$level) = @_;

    my $log_level_max = @loglevel@;

    if ( defined $level && ($level ne '') && ($level < $log_level_max ))
    {
	openlog ($prog_name,LOG_PID,LOG_INFO);
	
	#dbg;
	syslog(LOG_INFO,"$log\n", "normal");
	
	
	closelog();
    };
}

1;

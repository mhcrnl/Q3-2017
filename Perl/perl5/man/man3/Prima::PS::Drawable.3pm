.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Prima::PS::Drawable 3"
.TH Prima::PS::Drawable 3 "2015-11-04" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Prima::PS::Drawable \-  PostScript interface to Prima::Drawable
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        use Prima;
\&        use Prima::PS::Drawable;
\&
\&        my $x = Prima::PS::Drawable\-> create( onSpool => sub {
\&                open F, ">> ./test.ps";
\&                print F $_[1];
\&                close F;
\&        });
\&        die "error:$@" unless $x\-> begin_doc;
\&        $x\-> font\-> size( 30);
\&        $x\-> text_out( "hello!", 100, 100);
\&        $x\-> end_doc;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Realizes the Prima library interface to PostScript level 2 document language.
The module is designed to be compliant with Prima::Drawable interface.
All properties' behavior is as same as Prima::Drawable's, except those 
described below.
.SS "Inherited properties"
.IX Subsection "Inherited properties"
.IP "::resolution" 4
.IX Item "::resolution"
Can be set while object is in normal stage \- cannot be changed if document
is opened. Applies to fillPattern realization and general pixel-to-point
and vice versa calculations
.IP "::region" 4
.IX Item "::region"
\&\- ::region is not realized ( yet?)
.SS "Specific properties"
.IX Subsection "Specific properties"
.IP "::copies" 4
.IX Item "::copies"
amount of copies that \s-1PS\s0 interpreter should print
.IP "::grayscale" 4
.IX Item "::grayscale"
could be 0 or 1
.IP "::pageSize" 4
.IX Item "::pageSize"
physical page dimension, in points
.IP "::pageMargins" 4
.IX Item "::pageMargins"
non-printable page area, an array of 4 integers:
left, bottom, right and top margins in points.
.IP "::reversed" 4
.IX Item "::reversed"
if 1, a 90 degrees rotated document layout is assumed
.IP "::rotate and ::scale" 4
.IX Item "::rotate and ::scale"
along with Prima::Drawable::translate provide PS-specific
transformation matrix manipulations. ::rotate is number,
measured in degrees, counter-clockwise. ::scale is array of
two numbers, respectively x\- and y\-scale. 1 is 100%, 2 is 200% 
etc.
.IP "::useDeviceFonts" 4
.IX Item "::useDeviceFonts"
1 by default; optimizes greatly text operations, but takes the risk
that a character could be drawn incorrectly or not drawn at all \-
this behavior depends on a particular \s-1PS\s0 interpreter.
.IP "::useDeviceFontsOnly" 4
.IX Item "::useDeviceFontsOnly"
If 1, the system fonts, available from Prima::Application
interfaces can not be used. It is designed for
developers and the outside-of-Prima applications that wish to
use \s-1PS\s0 generation module without graphics. If 1, \f(CW\*(C`::useDeviceFonts\*(C'\fR
is set to 1 automatically.
.Sp
Default value is 0
.SS "Internal methods"
.IX Subsection "Internal methods"
.IP "emit" 4
.IX Item "emit"
Can be called for direct PostScript code injection. Example:
.Sp
.Vb 2
\&        $x\-> emit(\*(Aq0.314159 setgray\*(Aq);
\&        $x\-> bar( 10, 10, 20, 20);
.Ve
.IP "pixel2point and point2pixel" 4
.IX Item "pixel2point and point2pixel"
Helpers for translation from pixel to points and vice versa.
.IP "fill & stroke" 4
.IX Item "fill & stroke"
Wrappers for \s-1PS\s0 outline that is expected to be filled or stroked.
Apply colors, line and fill styles if necessary.
.IP "spool" 4
.IX Item "spool"
Prima::PS::Drawable is not responsible for output of
generated document, it just calls ::spool when document
is closed through ::end_doc. By default just skips data.
Prima::PS::Printer handles spooling logic.
.IP "fonts" 4
.IX Item "fonts"
Returns Prima::Application::font plus those that defined into Prima::PS::Fonts module.

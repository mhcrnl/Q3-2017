.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Prima::ImageDialog 3"
.TH Prima::ImageDialog 3 "2012-05-24" "perl v5.18.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Prima::ImageDialog \- file open and save dialogs.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The module provides dialogs specially adjusted for image 
loading and saving.
.SH "Prima::ImageOpenDialog"
.IX Header "Prima::ImageOpenDialog"
Provides a preview feature, allowing the user to view the image file before
loading, and the selection of a frame index for the multi-framed image files.
Instead of \f(CW\*(C`execute\*(C'\fR call, the load method is used to invoke the dialog and
returns the loaded image as a \f(CW\*(C`Prima::Image\*(C'\fR object.  The loaded object by
default contains \f(CW\*(C`{extras}\*(C'\fR hash variable set, which contains extra
information returned by the loader. See Prima::image\-load for more
information.
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
.Vb 4
\&        my $dlg = Prima::ImageOpenDialog\-> create;
\&        my $img = $dlg\-> load;
\&        return unless $img;
\&        print "$_:$img\->{extras}\->{$_}\en" for sort keys %{$img\-> {extras}};
.Ve
.SS "Proprties"
.IX Subsection "Proprties"
.IP "preview \s-1BOOLEAN\s0" 4
.IX Item "preview BOOLEAN"
Selects if the preview functionality is active. 
The user can switch it on and off interactively.
.Sp
Default value: 1
.SS "Methods"
.IX Subsection "Methods"
.ie n .IP "load %PROFILE" 4
.el .IP "load \f(CW%PROFILE\fR" 4
.IX Item "load %PROFILE"
Executes the dialog, and, if successful, loads the image file and frame
selected by the user. Returns the loaded image as a \f(CW\*(C`Prima::Image\*(C'\fR object.
\&\s-1PROFILE\s0 is a hash, passed to \f(CW\*(C`Prima::Image::load\*(C'\fR method. In particular, it
can be used to disable the default loading of extra information in \f(CW\*(C`{extras}\*(C'\fR
variable, or to specify a non-default loading option.  For example,
\&\f(CW\*(C`{extras}\->{className} = \*(AqPrima::Icon\*(Aq\*(C'\fR would return the loaded image as
an icon object. See Prima::image\-load for more.
.Sp
\&\f(CW\*(C`load\*(C'\fR can report progressive image loading to the caller, and/or to an
instance of \f(CW\*(C`Prima::ImageViewer\*(C'\fR, if desired. If either (or both)
\&\f(CW\*(C`onHeaderReady\*(C'\fR and \f(CW\*(C`onDataReady\*(C'\fR notifications are specified, these are
called from the respective event handlers of the image being loaded ( see
\&\*(L"Loading with progress indicator\*(R" in Prima::image\-load for details).  If
profile key \f(CW\*(C`progressViewer\*(C'\fR is supplied, its value is treated as a
\&\f(CW\*(C`Prima::ImageViewer\*(C'\fR instance, and it is used to display image loading
progress. See \*(L"watch_load_progress\*(R" in Prima::ImageViewer.
.SS "Events"
.IX Subsection "Events"
.IP "HeaderReady \s-1IMAGE\s0" 4
.IX Item "HeaderReady IMAGE"
See \*(L"HeaderReady\*(R" in Prima::Image.
.IP "DataReady \s-1IMAGE, X, Y, WIDTH, HEIGHT\s0" 4
.IX Item "DataReady IMAGE, X, Y, WIDTH, HEIGHT"
See \*(L"DataReady\*(R" in Prima::Image.
.SH "Prima::ImageSaveDialog"
.IX Header "Prima::ImageSaveDialog"
Provides a save dialog where the user can select image format, 
the bit depth and other format-specific options. The format-specific
options can be set if a dialog for the file format is provided.
The standard toolkit dialogs reside under in \f(CW\*(C`Prima::Image\*(C'\fR namespace,
in \fIPrima/Image\fR subdirectory. For example, \f(CW\*(C`Prima::Image::gif\*(C'\fR provides
the selection of transparency color, and \f(CW\*(C`Prima::Image::jpeg\*(C'\fR the image 
quality control. If the image passed to the image property contains
\&\f(CW\*(C`{extras}\*(C'\fR variable, the data are read and used as the default values.
In particular, \f(CW\*(C`{extras}\->\-{codecID}\*(C'\fR field, responsible for the
file format, if present, affects the default file format selection.
.SS "\s-1SYNOPSIS\s0"
.IX Subsection "SYNOPSIS"
.Vb 3
\&        my $dlg = Prima::ImageSaveDialog\-> create;
\&        return unless $dlg\-> save( $image );
\&        print "saved as ", $dlg\-> fileName, "\en";
.Ve
.SS "Properties"
.IX Subsection "Properties"
.IP "image \s-1IMAGE\s0" 4
.IX Item "image IMAGE"
Selects the image to be saved. This property is to be used
for the standard invocation of dialog, via \f(CW\*(C`execute\*(C'\fR. It is not
needed when the execution and saving is invoked via save method.
.SS "Methods"
.IX Subsection "Methods"
.ie n .IP "save \s-1IMAGE,\s0 %PROFILE" 4
.el .IP "save \s-1IMAGE,\s0 \f(CW%PROFILE\fR" 4
.IX Item "save IMAGE, %PROFILE"
Invokes the dialog, and, if the execution was successful, saves
the \s-1IMAGE\s0 according to the user selection and \s-1PROFILE\s0 hash. 
\&\s-1PROFILE\s0 is not used for the default options, but is passed
directly to \f(CW\*(C`Prima::Image::save\*(C'\fR call, possibly overriding 
selection of the user.
Returns 1 in case of success, 0 in case of error. 
If the error occurs, the user is notified before the method returns.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dmitry Karasik, <dmitry@karasik.eu.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Prima, Prima::Window, Prima::codecs, Prima::image\-load,
Prima::Image, Prima::FileDialog, Prima::ImageViewer, \fIexamples/iv.pl\fR.

Format = A
#
# See mh/lib/read_table_A.pl  for definition of Format=A items
#

#
# Type    Address               Name                   Groups                                      Other Info
#

#
# EIB items.
# Every address may be followed by any number of additional 
# hearing addresses. Addresses are separated by "+"
# Example:
# EIB1, 1/1/11+1/1/12+1/1/13, ....
#
# In "Other Info" you can specify:
# R - (Readable) means that the current value of the item can be obtained
#     by sending a "read" request on the bus.
# DO - (display only) means that the item has no states which can be set 
#      via web.
# label=name - sets the label of the item for web (if supported)
# icon=name - sets the icon of the item for web
# If you want to specify multiple options, concatenate them by "|"
# Example:
# EIB1, 1/1/11, Lamp, Lamps, R|label=My Lamp|icon=led
#
# EIB type 1. On/off switch items.
# One address, normally readable
#
EIB1,     1/1/11,               Kitchen_Table,         All_Lights|Kitchen,                         R

#
# Dimmer switch items.
# An EIB dimmer consists of three different items, with different 
# addresses: position, control and value.
# Position is for switching the light on/off (EIB1), control is for 
# starting/stopping dimming and brightening, and value for setting a 
# specific brightness level (0-100).
#
# The "address" of a type 2 item is the combination of three 
# addresses: "position"|"control"|"value".
#
# If you want the value readed back after dimming set the "R" mode.
#
EIB2,     1/1/21|1/1/22|1/4/2,	Kitchen_dimmer,        All_Lights|Kitchen, R

#
# EIB type 3. Time
#
EIB3,     1/1/31,        EIBTime, Time

#
# EIB type 4. Date
#
EIB4,     1/1/32,        EIBDate, Time

#
# EIB type 5. "Real" values, as for example generated by weather stations.
# "Other Info" specifies mode, see EIB type 1.
#
EIB5,     2/0/10,               Windspeed,         Weather,            R

# 
# EIB type 6. Scaling 0%-100% or 0-256
#
EIB6,     2/0/12,               Airspeed,          AirCondition

#
# Drives, for controlling motors for blinds, windows, etc.
# An EIB drive consists of two different items, with different addresses:  move and stop/step.
# Move is for starting movement up/down, stop/step is for stopping movement or stepping the motor.
#
# The "address" of a type 7 item is the combination of two addresses: "move"|"stop/step".
# Note that drives are not readable -- reading a drive may cause it to move!
#
# Usually EIB7-actuators can operate in two different operating modes: "shutter" or "blind"
# "Other Info" specifies the operating mode. If omitted a shutter is assumed. 
# Therefore, the two possibilities for shutters are as follows:
# 
EIB7,     2/1/0|2/1/1,          Kitchen_Shutter,        Kitchen|All_Blinds
EIB7,     2/1/2|2/1/3,          Kitchen_Shutter,        Kitchen|All_Blinds, shutter
#
# If you have a blind instead, declare it like this:
#
EIB7,     2/1/4|2/1/5,          Kitchen_Blind,          Kitchen|All_Blinds, blind
 
#
# EIB type 8. Forced control
# Allows a device state to be overwritten, when the forced mode is enabled.
#
EIB8,     2/2/20,              Motor,           Group,

#
# EIB9-EIB14 items for values with different value range.
# EIB9:    DPT 14.00x, EIS 9,      32-bit float
# EIB10:   DPT  7.001, EIS 10,     16-bit unsigned integer  
# EIB10_1: DPT  8.001, EIS 10.001, 16-bit   signed integer
# EIB11:   DPT 12.001, EIS 11,     32-bit unsigned integer
# EIB11_1: DPT 13.001, EIS 11.001, 32-bit   signed integer
# EIB14:   DPT  6.001, EIS 14,      8-bit   signed integer
# EIB14_1: DPT  5.010, EIS 14.1;    8-bit unsigned integer
#
#
# EIB type 15. For sending 14Byte text to displays. If you set a value it is
# automatically cutted or extended to be 14 chars long.
EIB15,     1/2/33,     Display,  Group, 

#
# EIBW - combination of two EIB1 items to deliver the position of a window with
# two contacts: close, tilt, open
EIBW,     1/3/20|1/3/21,   Window_Bath, Windows

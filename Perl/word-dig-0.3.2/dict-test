use strict;

use 5.004;

package _Initializable;

sub new {
    my ($class, %args) = @_;
    my $self = bless {}, ref($class) || $class;
    $self->_init(%args);
    return $self;
}


package Games::Dictionary;
{
    use Carp;
    use vars qw($VERSION @ISA $AUTOLOAD);
    
    @ISA = qw( _Initializable );
    
    $VERSION = "0.1.0";
    
    my %_attrs = (
		  _dict_ref => 'read/write',
		  );
    
    sub _accessible {
	my ($self, $attr, $mode) = @_;
	$_attrs{$attr} =~ /$mode/
	}

    sub _init {
	my ($self, %args)     = @_;
	$self->{_dict_ref}    = $self->_build_dict($args{dict});
    }

    sub _build_dict {
	my ($self, $words) = @_;
	my (%dict_ref, @words);
	
	unless ($words) {
	    $words = "/usr/dict/words";
	}

	unless (ref($words)) {
	    @words = ("$words");
	} else {
	    @words = @$words;
	}

	foreach my $letter ("a".."z") {
	    $dict_ref{$letter} = [];
	}

	foreach my $file (@words) {
	    open(DICT, "$file");
	    while (<DICT>) {
		chomp;
		my $word = $_;
		my $first = substr($word,0,1);
		my $letter_dict = $dict_ref{$first};
		push(@$letter_dict,$word);
	    }
	    close(DICT);
	}	
	return(\%dict_ref);
    }

    sub AUTOLOAD {
	my ($self, $newval) = @_;
	
	# set up get_foo methods
	$AUTOLOAD =~ /.*::get(_\w+)/
	    and $self->_accessible($1,'read')
		and return $self->{$1};
	
	# set up incr_foo methods
	$AUTOLOAD =~ /.*::incr(_\w+)/
	    and $self->_accessible($1,'write')
		and do { $self->{$1} = ($self->{$1} + $newval); return };
	
	# set up set_foo methods
	$AUTOLOAD =~ /.*::set(_\w+)/
	    and $self->_accessible($1,'write')
		and do { $self->{$1} = $newval; return };
	
	croak "No such method: $AUTOLOAD";
    }

    sub get_dict_ref {
	my ($self, $letter) = @_;

	my $letter_dict = $self->{_dict_ref};
	my $dict_ref = $$letter_dict{$letter};
	return $dict_ref;
    }
}


package main;

use Data::Dumper;

my %dict = (
	    dict => [
		     "./words",
		     "./words2",
		     ],
	    );

my $dict = Games::Dictionary->new();

#print Dumper($dict);

my $kays = $dict->get_dict_ref("m");
print Dumper($kays);
